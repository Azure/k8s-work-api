{{- if and .Values.admissionWebhooks.certManager.enabled -}}

# The following manifests contain a self-signed issuer CR and a certificate CR.
# More document can be found at https://docs.cert-manager.io
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: multicluster.x-k8s.io.workapi-self-signed-issuer
spec:
  selfSigned: {}

---
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: multicluster.x-k8s.io.workapi-root-cert
spec:
  secretName: multicluster.x-k8s.io.workapi-root-cert
  duration: 43800h # 5y
  revisionHistoryLimit: {{ .Values.admissionWebhooks.certManager.revisionHistoryLimit }}
  issuerRef:
    name: multicluster.x-k8s.io.workapi-self-signed-issuer
  commonName: "ca.webhook.multicluster.x-k8s.io.workapi"
  isCA: true

---
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: multicluster.x-k8s.io.workapi-root-issuer
  namespace: {{ .Release.Namespace }}
spec:
  ca:
    secretName: multicluster.x-k8s.io.workapi-root-cert

---
# generate a serving certificate for the apiservices to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: multicluster.x-k8s.io.workapi-admission
  namespace: {{ .Release.Namespace }}
spec:
  secretName: multicluster.x-k8s.io.workapi-admission
  duration: 8760h # 1y
  revisionHistoryLimit: {{ .Values.admissionWebhooks.certManager.revisionHistoryLimit }}
  issuerRef:
    name: multicluster.x-k8s.io.workapi-root-issuer
  dnsNames:
    - multicluster.x-k8s.io.workapi-webhook.{{ .Release.Namespace }}.svc
    - multicluster.x-k8s.io.workapi-webhook.{{ .Release.Namespace }}.svc.cluster.local

  {{- end }}
